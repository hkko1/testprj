name: Generate report
run-name: ${{ github.actor }} is testing out GitHub Actions üöÄ
on: [pull_request]

jobs:
  job_1:
    name: Code_coverage
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: read
    steps:
      - run: echo "üéâ develop The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - run: echo "github base ref is ${{ github.base_ref }}."
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '11'
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Run Junit Test
        run: mvn --batch-mode test
      - name: Archive Jacoco code coverage results
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-report
          path: |
            target/site/jacoco
      - run: cat target/site/jacoco/jacoco.csv
      - name: Get total coverage percent
        run: |
          echo "total_coverage=$(python scripts/GetTotalPercentage.py 'target/site/jacoco/jacoco.csv')" >> "$GITHUB_ENV"
      - name: Add PR Comment
        uses: mshick/add-pr-comment@v2
        with:
          message: |
            ## Total code coverage report
            ![image](https://img.shields.io/badge/cdc--common-${{env.total_coverage}})
            ![image](https://img.shields.io/badge/cdc--change--applier-41%brightgreen)
            ![image](https://img.shields.io/badge/cdc--embedded--connector-28%25-brightgreen)
            ${{env.total_coverage}}
      - run: echo "üçè This job's status is ${{ job.status }}."

  job_2:
    name: artifacts-url-comments
    needs: job_1
    runs-on: ubuntu-latest
    steps:
      - name: add artifact links to pull request and related issues step
        uses: tonyhallett/artifacts-url-comments@v1.1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          prefix: Here are the artifacts
          suffix: Have a nice day.
          format: name
          addTo: pullandissues
